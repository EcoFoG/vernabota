[{"path":"https://EcoFoG.github.io/vernabota/articles/compare.html","id":"preparing-the-data","dir":"Articles","previous_headings":"","what":"Preparing the data","title":"Comparing Simulation Settings","text":"first prepare data Introduction vignette. data want gapfill: priors: observed data update prior:","code":"library(vernabota) data(Paracou6_2016) Data2fill <- Paracou6_2016[Paracou6_2016$SubPlot==1,] Data2fill <- PrepData(Data2fill) data(PriorAllFG_20220126) PriorAllFG <- PriorAllFG_20220126 PriorAllFG <- PrepPrior(PriorAllFG)  data(PriorParacouNew_20220126) PriorParacouNew <- PriorParacouNew_20220126 PriorParacouNew <- PrepPrior(PriorParacouNew) DataAsso <- Paracou6_2016 DataAsso <- PrepData(DataAsso)"},{"path":"https://EcoFoG.github.io/vernabota/articles/compare.html","id":"comparing-different-settings-for-the-simulations-using-the-function-comparesim","dir":"Articles","previous_headings":"","what":"Comparing different settings for the simulations using the function CompareSim","title":"Comparing Simulation Settings","text":"NB: examples, low number simulations used. real tests, higher number simulations performed.","code":""},{"path":"https://EcoFoG.github.io/vernabota/articles/compare.html","id":"comparing-different-settings","dir":"Articles","previous_headings":"Comparing different settings for the simulations using the function CompareSim","what":"Comparing different settings","title":"Comparing Simulation Settings","text":"first create lists priors observation data want test: create Param dataframe explicit different scenarios test: priors : vector rank priors use priors list dataAsso : vector rank observation data use DAsso list (Dasso provided, put 1) weights : vector weights priors eps : vector epsilon value scenario Determ : vector value Determ (boolean) can run CompareSim, visualise scenarios results using summary plot accuracy using plot autoplot.","code":"priors <- list(PriorAllFG, PriorParacouNew) # priors DAsso <- list(NULL, DataAsso)               # observation data Param <- data.frame(priors = c(1,1,2,1,1),  # here, we used the first prior                      # of the list for scenario 1, 2, 4 and 5 and the second for scenario 3                     dataAsso = c(2,1,2,2,2), # for the second scenario dataAsso is NULL (the data to gapfill are used)                     weights = c(0.5,0.5,0.5,0.2,0.8),                     eps = c(0.01,0.01,0.01,0.01,0.01),                     Determ = c(FALSE,FALSE,FALSE,FALSE,FALSE)) Param #>   priors dataAsso weights  eps Determ #> 1      1        2     0.5 0.01  FALSE #> 2      1        1     0.5 0.01  FALSE #> 3      2        2     0.5 0.01  FALSE #> 4      1        2     0.2 0.01  FALSE #> 5      1        2     0.8 0.01  FALSE VBS_test <- CompareSim(Param = Param ,                        priors = priors, D2fill = Data2fill, DAsso = DAsso,                        pc2fill = 10, pcFamilyDet = 25, pcGenusDet = 25,                         NbSim = 10, Results_Simulations = FALSE)  summary(VBS_test) #> scenario a  #> 10  repetition(s) with priors nb 1 , dataAsso nb 2 , weights  0.5 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.4693878 0.5127551 0.5255102 0.5484694 0.5714286  #> scenario b  #> 10  repetition(s) with priors nb 1 , dataAsso nb 1 , weights  0.5 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.4081633 0.4311224 0.4540816 0.4591837 0.5204082  #> scenario c  #> 10  repetition(s) with priors nb 2 , dataAsso nb 2 , weights  0.5 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.4489796 0.4770408 0.5000000 0.5204082 0.5408163  #> scenario d  #> 10  repetition(s) with priors nb 1 , dataAsso nb 2 , weights  0.2 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.5102041 0.5459184 0.5663265 0.5816327 0.6020408  #> scenario e  #> 10  repetition(s) with priors nb 1 , dataAsso nb 2 , weights  0.8 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.3979592 0.4107143 0.4234694 0.4515306 0.4693878 autoplot(VBS_test)"},{"path":"https://EcoFoG.github.io/vernabota/articles/compare.html","id":"testing-deterministic-associations","dir":"Articles","previous_headings":"Comparing different settings for the simulations using the function CompareSim","what":"Testing deterministic associations","title":"Comparing Simulation Settings","text":"lots warning messages (displayed ) cases two associations equality likely. also explain variability accuracy plotted.","code":"Param <- data.frame(priors = c(1,1,2,1,1),                       dataAsso = c(2,1,2,2,2),                      weights = c(0.5,0.5,0.5,0.2,0.8),                     eps = c(0.01,0.01,0.01,0.01,0.01),                     Determ = c(TRUE,TRUE,TRUE,TRUE,TRUE)) Param #>   priors dataAsso weights  eps Determ #> 1      1        2     0.5 0.01   TRUE #> 2      1        1     0.5 0.01   TRUE #> 3      2        2     0.5 0.01   TRUE #> 4      1        2     0.2 0.01   TRUE #> 5      1        2     0.8 0.01   TRUE VBS_test <- CompareSim(Param = Param ,                        priors = priors, D2fill = Data2fill, DAsso = DAsso,                        pc2fill = 10, pcFamilyDet = 25, pcGenusDet = 25,                         NbSim = 10, Results_Simulations = FALSE) summary(VBS_test) #> scenario a  #> 10  repetition(s) with priors nb 1 , dataAsso nb 2 , weights  0.5 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.6734694 0.6836735 0.6887755 0.6938776 0.7040816  #> scenario b  #> 10  repetition(s) with priors nb 1 , dataAsso nb 1 , weights  0.5 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.5918367 0.6020408 0.6173469 0.6224490 0.6326531  #> scenario c  #> 10  repetition(s) with priors nb 2 , dataAsso nb 2 , weights  0.5 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.6836735 0.6836735 0.6887755 0.6938776 0.6938776  #> scenario d  #> 10  repetition(s) with priors nb 1 , dataAsso nb 2 , weights  0.2 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.7040816 0.7142857 0.7142857 0.7142857 0.7244898  #> scenario e  #> 10  repetition(s) with priors nb 1 , dataAsso nb 2 , weights  0.8 , pc2fill 10 % , and eps 0.01  #>        0%       25%       50%       75%      100%  #> 0.6836735 0.6836735 0.6836735 0.6913265 0.6938776 autoplot(VBS_test)"},{"path":"https://EcoFoG.github.io/vernabota/articles/compare.html","id":"checking-stability-of-association-accuracy","dir":"Articles","previous_headings":"Comparing different settings for the simulations using the function CompareSim","what":"Checking stability of association accuracy","title":"Comparing Simulation Settings","text":"can plot variability accuracy increasing number simulations used: 1, …, NbSim, function stabletest.  see increase number simulations, seems stabilized 6 simulations.","code":"Param <- data.frame(priors = c(2),                     dataAsso = c(2),                     weights = c(0.5),                     eps = c(0.01),                     Determ = c(FALSE)) Param #>   priors dataAsso weights  eps Determ #> 1      2        2     0.5 0.01  FALSE VBS_test <- CompareSim(Param = Param ,                        priors = priors, D2fill = Data2fill, DAsso = DAsso,                        pc2fill = 10, pcFamilyDet = 25, pcGenusDet = 25,                         NbSim = 10, Results_Simulations = TRUE)  stabletest(VBS_test,1)"},{"path":"https://EcoFoG.github.io/vernabota/articles/compare.html","id":"comparing-different-sampled-datasets","dir":"Articles","previous_headings":"Comparing different settings for the simulations using the function CompareSim","what":"Comparing different sampled datasets","title":"Comparing Simulation Settings","text":"CompareSim uses one test dataset, want check potential variability resulting sampling test dataset. can done CompareSample function. function samples NbSamples test datasets performs comparison scenarios test dataset.    , ranking preserved different test datasets: scenario c gives better results. confirms variability scenarios higher one samplings. can choose scenario according ranking.","code":"Param <- data.frame(priors = c(2,1,2),                       dataAsso = c(1,1,2),                      weights = c(0.5,0.5,0.5),                     eps = c(0.01,0.01,0.01),                     Determ = c(FALSE,FALSE,FALSE))  VBS_test2 <- CompareSample(NbSamples = 3,Param = Param ,                        priors = priors, D2fill = Data2fill, DAsso = DAsso,                        pc2fill = 10, pcFamilyDet = 25, pcGenusDet = 25,                         NbSim = 10, Results_Simulations = FALSE) # results with the first dataset autoplot(VBS_test2[[1]][[1]]) # results with the second dataset are a bit different autoplot(VBS_test2[[1]][[2]]) # all results together library(ggplot2) ggplot(aes(y = accuracy, x = sample, fill = scenario), data = VBS_test2[[2]]) + geom_boxplot()"},{"path":"https://EcoFoG.github.io/vernabota/articles/compare.html","id":"examining-results-associations","dir":"Articles","previous_headings":"Comparing different settings for the simulations using the function CompareSim","what":"Examining results associations","title":"Comparing Simulation Settings","text":"now want examine association tree tree. simulations scenario (just one) can retrieved list data.table. cases original data contained several censuses plots (.e. several lines per individual trees), output contained results keeps one line per individual, subset colums original dataset (ones don’t change censuses). can look simulations: TestData indicates tree used test subset, ValidAsso botanical association correct. can also calculate percentage good association tested tree, scenario:","code":"Param <- data.frame(priors = c(2),                      dataAsso = c(2),                      weights = c(0.5),                     eps = c(0.01),                     Determ = c(FALSE)) Param #>   priors dataAsso weights  eps Determ #> 1      2        2     0.5 0.01  FALSE VBS_test <- CompareSim(Param = Param ,                        priors = priors, D2fill = Data2fill, DAsso = DAsso,                        pc2fill = 10, pcFamilyDet = 25, pcGenusDet = 25,                         NbSim = 10, Results_Simulations = TRUE) ResL <- VBS_test@results[[1]] # here we get all the simulation of scenario 1 str(ResL[[1]]) # first simulation #> Classes 'data.table' and 'data.frame':   976 obs. of  12 variables: #>  $ idTree       : Factor w/ 976 levels \"100621\",\"100622\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ Family       : chr  \"Euphorbiaceae\" \"Arecaceae\" \"Sapotaceae\" \"Humiriaceae\" ... #>  $ Genus        : chr  \"Sandwithia\" \"Oenocarpus\" \"Micropholis\" \"Sacoglottis\" ... #>  $ Species      : chr  \"guyanensis\" \"bataua\" \"guyanensis\" \"guianensis\" ... #>  $ BotaSource   : chr  \"Bota\" \"Bota\" \"Bota\" \"Bota\" ... #>  $ BotaCertainty: Factor w/ 6 levels \"-1\",\"0\",\"1\",\"2\",..: 6 6 6 6 6 6 6 5 6 6 ... #>  $ VernName     : Factor w/ 110 levels \"-\",\"acacia franc\",..: 102 79 14 91 18 97 14 86 75 70 ... #>  $ GenSp        : Factor w/ 205 levels \"Indet.-Indet.\",..: 165 133 124 164 186 203 1 92 134 105 ... #>  $ GensSpCor    : Factor w/ 231 levels \"Indet.-Indet.\",..: 165 133 124 164 186 203 206 92 134 105 ... #>  $ BotaCorCode  : Factor w/ 7 levels \"fullyDet\",\"NoCor\",..: 1 1 1 1 1 1 3 1 1 1 ... #>  $ ValidAsso    : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ TestData     : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  - attr(*, \".internal.selfref\")=<externalptr>  #>  - attr(*, \"sorted\")= chr \"idTree\" library(data.table) Res <- rbindlist(ResL) # combine them in a single data.table # calculate the percentage of good association for each tested tree PropGood <- Res[TestData==TRUE & ValidAsso==TRUE,                 list(propOK=.N/length(ResL)), # number of correct association divided by number of association (NbSim)                 by=idTree] head(PropGood) #>    idTree propOK #> 1: 100657    1.0 #> 2: 100660    0.6 #> 3: 100667    1.0 #> 4: 100671    1.0 #> 5: 100689    1.0 #> 6: 100690    0.2"},{"path":"https://EcoFoG.github.io/vernabota/articles/model.html","id":"method-of-association-of-a-vernacular-name-with-a-botanical-name","dir":"Articles","previous_headings":"","what":"Method of association of a vernacular name with a botanical name","title":"Models","text":"tree t vernacular name v. tree can known genus, known family botanical information . associated botanical names follow categorical distribution \\(\\mathcal{Cat} (\\alpha^v)\\) \\(\\alpha^v = [\\alpha^v_1, \\alpha^v_2,..., \\alpha^v_N]\\) vector probability association vernacular name v botanical name (\\(\\sum_{s=1}^N \\alpha^v_i =1)\\)) N number botanical name present inventories taken reference /prior knowledge. get vector \\(\\alpha^v\\), use Dirichlet-categorical scheme combine prior information based expert knowledge updated observed frequencies association vernacular name v botanical name reference inventories \\(f^v = [f^v_1, f^v_2,..., f^v_N]\\) (Aubry-Kientz et al. 2013). consider \\(\\lambda^v\\) hyperparameters \\(\\alpha^v\\), .e. parameters prior distribution \\(\\alpha^v\\). prior probability association vernacular v botanical name s [1,N] \\(\\lambda^v_s\\) obtained follows: \\(\\lambda^v_s = \\frac{1}{m_v}\\) botanical name s associated vernacular name v belongs genus t (know genus) family t (known family). \\(m_v\\) number botanical names meeting conditions. \\(\\lambda^v_s = \\frac{\\epsilon}{N-m_v}\\) otherwise (\\(\\epsilon\\) background noise) prior distribution \\(\\alpha^v \\sim \\mathcal{Dir}(N, \\lambda^v)\\). Dirichlet distribution conjugated prior categorical distribution, posterior distribution probabilities associations \\(\\alpha^v\\) can obtained updating expert knowledge observed frequency association \\(f^v\\). posterior distribution probability association \\(\\alpha^v | f^v,\\lambda^v \\sim \\mathcal{Dir} (N, w_p \\times \\lambda^v_1 + (1-w_p) \\times f^v_1,...,w_p \\times \\lambda^v_N+(1-w_p) \\times f^v_N)\\) \\(w_p\\) weight given prior information. NB: \\(\\lambda^v\\) \\(f^v\\) taken frequencies give weight give weight prior observations given equal weight (.e. \\(w_p=0.5\\)). practice, don’t want calculate vector \\(\\alpha^v\\) tree, create matrix \\(\\alpha\\) \\(\\alpha^v\\) used trees. therefore don’t information family genus stage. take \\(\\lambda^v_s = 0\\) botanical names associated vernacular name v according expert knowledge. matrix \\(\\alpha\\) lot 0 (case association according expert knowledge, according data). consider tree t, replace non-null values 0 botanical names don’t belong genus t (known genus) family t (known family). replace 0 \\(\\epsilon\\) divided number value=0.","code":""},{"path":"https://EcoFoG.github.io/vernabota/articles/model.html","id":"possible-types-of-gapfilling","dir":"Articles","previous_headings":"","what":"Possible types of gapfilling","title":"Models","text":"Flowchart possible correction","code":""},{"path":"https://EcoFoG.github.io/vernabota/articles/model.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Models","text":"Aubry-Kientz, Mélaine, Bruno Hérault, Charles Ayotte-Trépanier, Christopher Baraloto, Vivien Rossi. 2013. “Toward Trait-Based Mortality Models Tropical Forests.” Edited Francesco de Bello. PLoS ONE 8 (5): e63678. https://doi.org/10.1371/journal.pone.0063678.","code":""},{"path":[]},{"path":"https://EcoFoG.github.io/vernabota/articles/vernabota.html","id":"data-that-we-want-to-gapfill","dir":"Articles","previous_headings":"Preparing the data","what":"Data that we want to gapfill","title":"Introduction to vernabota","text":"algorithm works dataset formatted obtained using function EcoFoG::Guyafor2df online data platform Paracou. can several censuses plot (.e. several lines per individual trees). , take example data plot 6, census 2016, use subplot 1 dataset want gapfill. call dataset Data2fill. dataset, column VernName contain special character é, è œ (data Guyafor database special characters). use function PrepData prepare data.","code":"library(vernabota) data(Paracou6_2016) Data2fill <- Paracou6_2016[Paracou6_2016$SubPlot==1,] Data2fill <- PrepData(Data2fill) str(Data2fill) #> Classes 'data.table' and 'data.frame':   976 obs. of  26 variables: #>  $ Forest             : chr  \"Paracou\" \"Paracou\" \"Paracou\" \"Paracou\" ... #>  $ Plot               : int  6 6 6 6 6 6 6 6 6 6 ... #>  $ PlotArea           : num  6.25 6.25 6.25 6.25 6.25 6.25 6.25 6.25 6.25 6.25 ... #>  $ SubPlot            : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ idTree             : Factor w/ 976 levels \"100621\",\"100622\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ Xfield             : num  23 28.5 14 9.5 10 5 5 3.5 5 8.5 ... #>  $ Yfield             : num  236 248 210 126 128 ... #>  $ Xutm               : num  286421 286423 286418 286435 286435 ... #>  $ Yutm               : num  583171 583185 583144 583062 583063 ... #>  $ Lat                : num  5.27 5.27 5.27 5.27 5.27 ... #>  $ Lon                : num  -52.9 -52.9 -52.9 -52.9 -52.9 ... #>  $ Family             : chr  \"Euphorbiaceae\" \"Arecaceae\" \"Sapotaceae\" \"Humiriaceae\" ... #>  $ Genus              : chr  \"Sandwithia\" \"Oenocarpus\" \"Micropholis\" \"Sacoglottis\" ... #>  $ Species            : chr  \"guyanensis\" \"bataua\" \"guyanensis\" \"guianensis\" ... #>  $ BotaSource         : chr  \"Bota\" \"Bota\" \"Bota\" \"Bota\" ... #>  $ BotaCertainty      : Factor w/ 6 levels \"-1\",\"0\",\"1\",\"2\",..: 6 6 6 6 6 6 6 5 6 6 ... #>  $ VernName           : Factor w/ 110 levels \"-\",\"acacia franc\",..: 102 79 14 91 18 97 14 86 75 70 ... #>  $ CensusYear         : int  2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 ... #>  $ CensusDate         : chr  \"2016-09-14\" \"2016-09-14\" \"2016-09-14\" \"2016-09-14\" ... #>  $ CensusDateCertainty: int  1 1 1 1 1 1 1 1 1 1 ... #>  $ CodeAlive          : int  1 1 1 1 1 1 1 1 1 0 ... #>  $ MeasCode           : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Circ               : num  42 59.5 74 132.5 46 ... #>  $ CircCorr           : num  42 59.5 74 132.5 46 ... #>  $ CorrCode           : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ GenSp              : Factor w/ 188 levels \"Abarema-jupunba\",..: 148 116 107 147 169 186 128 74 117 88 ... #>  - attr(*, \".internal.selfref\")=<externalptr>  #>  - attr(*, \"index\")= int(0)  #>   ..- attr(*, \"__BotaSource\")= int [1:976] 1 2 3 4 5 6 7 8 9 10 ..."},{"path":"https://EcoFoG.github.io/vernabota/articles/vernabota.html","id":"prior-expert-knowledge-on-possible-associations","dir":"Articles","previous_headings":"Preparing the data","what":"Prior: expert knowledge on possible associations","title":"Introduction to vernabota","text":"prior dataframe vernacular names columns botanical names rows (given 3 column Family, Genus Species. given vernacular name given botanical name, value 1 association possible, according expert knowledge, 0 . propose three prior files resulting work Jean-Maurice Madkaud (2012), updated using code 5_Dev/Prior_Verna_Bota_Name_Cleaning/Prior_Verna_Bota_Name_Cleaning.Rmd January 2022. use function PrepPrior prepare prior. use default settings want remove botanical names non-determined species, botanical names Guyafor prior. reason names always lead incorrect association using CompareSim function (see ). However, one may decide keep , lead possible associations botanical name form Genus-Indet. BotaCodeCor=\"AssoByGenus\" =\"AssoByFam\" (RemoveIndetSp==TRUE) . possible associations botanical name never observed Guyafor (RemoveNotGuyafor==TRUE). latter cases, prior information used.","code":"data(PriorAllFG_20220126) PriorAllFG <- PriorAllFG_20220126 str(PriorAllFG[,1:10]) #> 'data.frame':    1657 obs. of  10 variables: #>  $ Family          : chr  \"Fabaceae\" \"Chrysobalanaceae\" \"Melastomataceae\" \"Opiliaceae\" ... #>  $ Genus           : chr  \"Abarema\" \"Acioa\" \"Aciotis\" \"Agonandra\" ... #>  $ Species         : chr  \"jupunba\" \"guianensis\" \"purpurascens\" \"silvatica\" ... #>  $ PresentInGuyaFor: logi  TRUE FALSE FALSE TRUE TRUE FALSE ... #>  $ acacia franc    : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ acajou de guyane: num  0 0 0 0 0 0 0 0 0 0 ... #>  $ adugue          : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ aganananga      : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ aganiamai       : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ agui            : num  0 0 0 0 0 0 0 0 0 0 ...  data(PriorParacouNew_20220126) PriorParacouNew <- PriorParacouNew_20220126 # str(PriorParacouNew[,1:10])  # data(PriorParacouOld_20220126) # PriorParacouOld <- PriorParacouOld_20220126 # str(PriorParacouOld[,1:10]) PriorAllFG <- PrepPrior(PriorAllFG) str(PriorAllFG[,1:10]) #> Classes 'data.table' and 'data.frame':   681 obs. of  10 variables: #>  $ Family          : chr  \"Fabaceae\" \"Opiliaceae\" \"Lauraceae\" \"Lauraceae\" ... #>  $ Genus           : chr  \"Abarema\" \"Agonandra\" \"Aiouea\" \"Aiouea\" ... #>  $ Species         : chr  \"jupunba\" \"silvatica\" \"guianensis\" \"laevis\" ... #>  $ acacia franc    : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ acajou de guyane: num  0 0 0 0 0 0 0 0 0 0 ... #>  $ adugue          : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ aganananga      : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ aganiamai       : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ agui            : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ agusiton        : num  0 0 0 0 0 0 0 0 0 0 ... #>  - attr(*, \".internal.selfref\")=<externalptr>  PriorParacouNew <- PrepPrior(PriorParacouNew) # str(PriorParacouNew[,1:10]) #  # PriorParacouOld <- PrepPrior(PriorParacouOld) # str(PriorParacouOld[,1:10])"},{"path":"https://EcoFoG.github.io/vernabota/articles/vernabota.html","id":"observation-data-to-update-the-prior","dir":"Articles","previous_headings":"Preparing the data","what":"Observation data to update the prior","title":"Introduction to vernabota","text":"build matrix association vernacular scientific names, can either use dataset one want perform association another dataset. user needs carefully think choice . Using dataset can lead underestimating diversity consider dispersal species outside. Using wide data set lead associating species present area. can several censuses plot (.e. several lines per individual trees). dataset, column VernName contain special character é, è œ (data Guyafor database special characters). , use data plot 6 (four subplots), census 2016. call dataset DataAsso. use function PrepData prepare data.","code":"DataAsso <- Paracou6_2016 DataAsso <- PrepData(DataAsso) str(DataAsso) #> Classes 'data.table' and 'data.frame':   3620 obs. of  26 variables: #>  $ Forest             : chr  \"Paracou\" \"Paracou\" \"Paracou\" \"Paracou\" ... #>  $ Plot               : int  6 6 6 6 6 6 6 6 6 6 ... #>  $ PlotArea           : num  6.25 6.25 6.25 6.25 6.25 6.25 6.25 6.25 6.25 6.25 ... #>  $ SubPlot            : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ idTree             : Factor w/ 3620 levels \"100621\",\"100622\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ Xfield             : num  23 28.5 14 9.5 10 5 5 3.5 5 8.5 ... #>  $ Yfield             : num  236 248 210 126 128 ... #>  $ Xutm               : num  286421 286423 286418 286435 286435 ... #>  $ Yutm               : num  583171 583185 583144 583062 583063 ... #>  $ Lat                : num  5.27 5.27 5.27 5.27 5.27 ... #>  $ Lon                : num  -52.9 -52.9 -52.9 -52.9 -52.9 ... #>  $ Family             : chr  \"Euphorbiaceae\" \"Arecaceae\" \"Sapotaceae\" \"Humiriaceae\" ... #>  $ Genus              : chr  \"Sandwithia\" \"Oenocarpus\" \"Micropholis\" \"Sacoglottis\" ... #>  $ Species            : chr  \"guyanensis\" \"bataua\" \"guyanensis\" \"guianensis\" ... #>  $ BotaSource         : chr  \"Bota\" \"Bota\" \"Bota\" \"Bota\" ... #>  $ BotaCertainty      : Factor w/ 6 levels \"-1\",\"0\",\"1\",\"2\",..: 6 6 6 6 6 6 6 5 6 6 ... #>  $ VernName           : Factor w/ 156 levels \"-\",\"acacia franc\",..: 146 112 23 131 29 138 23 123 105 100 ... #>  $ CensusYear         : int  2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 ... #>  $ CensusDate         : chr  \"2016-09-14\" \"2016-09-14\" \"2016-09-14\" \"2016-09-14\" ... #>  $ CensusDateCertainty: int  1 1 1 1 1 1 1 1 1 1 ... #>  $ CodeAlive          : int  1 1 1 1 1 1 1 1 1 0 ... #>  $ MeasCode           : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Circ               : num  42 59.5 74 132.5 46 ... #>  $ CircCorr           : num  42 59.5 74 132.5 46 ... #>  $ CorrCode           : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ GenSp              : Factor w/ 321 levels \"Abarema-jupunba\",..: 253 193 175 251 289 316 215 118 195 142 ... #>  - attr(*, \".internal.selfref\")=<externalptr>  #>  - attr(*, \"index\")= int(0)  #>   ..- attr(*, \"__BotaSource\")= int [1:3620] 1 2 3 4 5 6 7 8 9 10 ..."},{"path":"https://EcoFoG.github.io/vernabota/articles/vernabota.html","id":"running-some-simulations-using-the-function-simfullcom","dir":"Articles","previous_headings":"","what":"Running some simulations using the function SimFullCom","title":"Introduction to vernabota","text":"NB: examples, low number simulations used. real tests, higher number simulations performed. SimFullCom function returns original dataset two additional columns: GensSpCor: Genus species gap filling. BotaCorCode : type correction (see section Possible types gapfilling vignette, help SimFullCom function). cases original data contained several censuses plots (.e. several lines per individual trees), output keeps several censuses. given simulations, observations tree botanical names associated.","code":""},{"path":"https://EcoFoG.github.io/vernabota/articles/vernabota.html","id":"example-1-using-the-same-dataset-for-data2fill-and-dataasso-without-prior","dir":"Articles","previous_headings":"Running some simulations using the function SimFullCom","what":"Example 1: using the same dataset for Data2fill and DataAsso, without prior","title":"Introduction to vernabota","text":"","code":"DataNSim <- SimFullCom(Data2fill, NSim=2, eps=0.01) str(DataNSim, max.level = 1) #> List of 2 #>  $ :Classes 'data.table' and 'data.frame':   976 obs. of  28 variables: #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>   ..- attr(*, \"sorted\")= chr \"idTree\" #>  $ :Classes 'data.table' and 'data.frame':   976 obs. of  28 variables: #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>   ..- attr(*, \"sorted\")= chr \"idTree\" colnames(DataNSim[[1]]) #>  [1] \"idTree\"              \"Forest\"              \"Plot\"                #>  [4] \"PlotArea\"            \"SubPlot\"             \"Xfield\"              #>  [7] \"Yfield\"              \"Xutm\"                \"Yutm\"                #> [10] \"Lat\"                 \"Lon\"                 \"Family\"              #> [13] \"Genus\"               \"Species\"             \"BotaSource\"          #> [16] \"BotaCertainty\"       \"VernName\"            \"CensusYear\"          #> [19] \"CensusDate\"          \"CensusDateCertainty\" \"CodeAlive\"           #> [22] \"MeasCode\"            \"Circ\"                \"CircCorr\"            #> [25] \"CorrCode\"            \"GenSp\"               \"GensSpCor\"           #> [28] \"BotaCorCode\" table(DataNSim[[1]]$BotaCorCode) #>  #>    fullyDet   Det2Genus       NoCor   AssoByFam  AssoByVern     Det2Fam  #>         953           2           1           2          11           1  #> AssoByGenus  #>           6"},{"path":"https://EcoFoG.github.io/vernabota/articles/vernabota.html","id":"example-2-using-different-dataset-for-data2fill-and-dataasso-with-a-prior-different-weighing-of-the-prior-and-the-observations","dir":"Articles","previous_headings":"Running some simulations using the function SimFullCom","what":"Example 2: using different dataset for Data2fill and DataAsso, with a prior (different weighing of the prior and the observations)","title":"Introduction to vernabota","text":"weight 0.2 prior 0.8 observations.","code":"DataNSim <- SimFullCom(Data2fill=Data2fill, DataAsso=DataAsso,                         prior=PriorAllFG, wp=0.2, NSim=2, eps=0.01) #str(DataNSim, max.level = 1) #colnames(DataNSim[[1]]) table(DataNSim[[1]]$BotaCorCode) #>  #>    fullyDet   AssoByFam  AssoByVern     Det2Fam   Det2Genus AssoByGenus  #>         953           2          12           1           1           7"},{"path":"https://EcoFoG.github.io/vernabota/articles/vernabota.html","id":"example-3-getting-the-more-likely-associations-using-determtrue","dir":"Articles","previous_headings":"Running some simulations using the function SimFullCom","what":"Example 3: getting the more likely associations (using Determ=TRUE)","title":"Introduction to vernabota","text":"want simulate likely associations, set NSim 1.","code":"DataNSim <- SimFullCom(Data2fill=Data2fill, DataAsso=DataAsso,                         prior=PriorAllFG, wp=0.2, NSim=1, eps=0.01, Determ=TRUE) #str(DataNSim, max.level = 1) #colnames(DataNSim[[1]]) table(DataNSim[[1]]$BotaCorCode) #>  #>          fullyDet   AssoByFamDeterm  AssoByVernDeterm           Det2Fam  #>               953                 2                12                 1  #>         Det2Genus AssoByGenusDeterm  #>                 1                 7"},{"path":"https://EcoFoG.github.io/vernabota/articles/vernabota.html","id":"comparing-different-settings-for-the-simulations-using-the-function-comparesim","dir":"Articles","previous_headings":"","what":"Comparing different settings for the simulations using the function CompareSim","title":"Introduction to vernabota","text":"See article.","code":""},{"path":"https://EcoFoG.github.io/vernabota/articles/vernabota.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Introduction to vernabota","text":"Aubry-Kientz, Mélaine, Bruno Hérault, Charles Ayotte-Trépanier, Christopher Baraloto, Vivien Rossi. 2013. “Toward Trait-Based Mortality Models Tropical Forests.” Edited Francesco de Bello. PLoS ONE 8 (5): e63678. https://doi.org/10.1371/journal.pone.0063678. Madkaud, Jules-Maurice. 2012. “Mettre à plat les correspondances entre noms vernaculaires et identités botaniques des espèces présentes sur le site de Paracou (Guyane Française).” PhD thesis, Université des Antilles et de la Guyane. Mirabel, Ariane. 2018. “Réponse et Résilience de la Biodiversité d’une Forêt Tropicale après Perturbation.” PhD thesis, Université de Guyane.","code":""},{"path":"https://EcoFoG.github.io/vernabota/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Geraldine Derroire. Author, maintainer. Melaine Aubry-Kientz. Author. Ariane Mirabel. Author. Daniela Krebber. Author. Eric Marcon. Author. Bruno Herault. Author.","code":""},{"path":"https://EcoFoG.github.io/vernabota/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Derroire G, Aubry-Kientz M, Mirabel , Krebber D, Marcon E, Herault B (2022). vernabota: Association vernacular botanical names Guyafor data. R package version 0.3.0, https://github.com/EcoFoG/vernabota.","code":"@Manual{,   title = {vernabota: Association between vernacular and botanical names for Guyafor data},   author = {Geraldine Derroire and Melaine Aubry-Kientz and Ariane Mirabel and Daniela Krebber and Eric Marcon and Bruno Herault},   year = {2022},   note = {R package version 0.3.0},   url = {https://github.com/EcoFoG/vernabota}, }"},{"path":"https://EcoFoG.github.io/vernabota/index.html","id":"gapfilling-missing-botanical-names-using-vernacular-names","dir":"","previous_headings":"","what":"Association between vernacular and botanical names for Guyafor data","title":"Association between vernacular and botanical names for Guyafor data","text":"R package vernabota allows gapfilling missing botanical names using vernacular names, case Guyafor census data. objective obtain chosen number simulated communities individuals identified vernacular name given botanical name based probabilities association vernacular botanical names.","code":""},{"path":"https://EcoFoG.github.io/vernabota/index.html","id":"installing-and-loading-the-package","dir":"","previous_headings":"","what":"Installing and loading the package","title":"Association between vernacular and botanical names for Guyafor data","text":"first use, package needs installed GitHub: can loaded. quick introduction vignette(\"vernabota\").","code":"remotes::install_github(\"EcoFoG/vernabota\", build_vignettes = TRUE) library(vernabota)"},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSample.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform simulation and compare different ways of sampling the data to fill — CompareSample","title":"Perform simulation and compare different ways of sampling the data to fill — CompareSample","text":"function performs several simulations like CompareSim, different samples dataset used test.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform simulation and compare different ways of sampling the data to fill — CompareSample","text":"","code":"CompareSample(   NbSamples = 3,   Param = NULL,   priors = NULL,   D2fill,   DAsso = NULL,   pc2fill = NULL,   pcFamilyDet = NULL,   pcGenusDet = NULL,   NbSim = 1,   Results_Simulations = FALSE )"},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform simulation and compare different ways of sampling the data to fill — CompareSample","text":"NbSamples integer: number test dataset sampling compare. parameters parameters function CompareSim. Param datatable parameters scenario : priors : vector rank priors use priors list dataAsso : vector rank observation data use DAsso list (Dasso provided, put 1) weights : vector weights priors eps : vector epsilon value scenario Determ : vector value Determ (boolean) priors list datasets containing priors scenario. datasets must prepared using function PrepPrior. (Default NULL: prior information used). D2fill dataset fill, dataset must prepared using function PrepData. DAsso list datasets observation used scenario, datasets must prepared using function PrepData (Default NULL: dataset Data2fill used built association matrix). pc2fill percentage data (dataFill) fill. pcFamilyDet percentage data determined family level (subset dataFill fill). recommend using percentage equivalent data gapfill. pcGenusDet percentage data determined genus level (subset dataFill fill, rest determined ). recommend using percentage equivalent data gapfill. NbSim number simulations. Results_Simulations boolean specifying user wants keep results simulations","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform simulation and compare different ways of sampling the data to fill — CompareSample","text":"function returns list 2 objects: list objects class VernaBotaSims, resulting simulations datasets one line per simulation : accuracy, scenario, sampled test dataset","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform simulation and compare different ways of sampling the data to fill — CompareSample","text":"function performs following steps NbSamples times: Get data, Split train test set remove taxonomic information test set (see SampleTestDataset function), scenario: perform simulations (see SimFullCom function), compare simulations original taxonomic information, function CompareTaxo, create object class VernaBotaSims","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSim.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform simulation and compare them to original species — CompareSim","title":"Perform simulation and compare them to original species — CompareSim","text":"function performs several simulations trees complete taxonomic identification compare results original species.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform simulation and compare them to original species — CompareSim","text":"","code":"CompareSim(   Param = NULL,   priors = NULL,   D2fill,   DAsso = NULL,   pc2fill = NULL,   pcFamilyDet = NULL,   pcGenusDet = NULL,   NbSim = 1,   Results_Simulations = FALSE )"},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform simulation and compare them to original species — CompareSim","text":"Param datatable parameters scenario : priors : vector rank priors use priors list dataAsso : vector rank observation data use DAsso list (Dasso provided, put 1) weights : vector weights priors eps : vector epsilon value scenario Determ : vector value Determ (boolean) priors list datasets containing priors scenario. datasets must prepared using function PrepPrior. (Default NULL: prior information used). D2fill dataset fill, dataset must prepared using function PrepData. DAsso list datasets observation used scenario, datasets must prepared using function PrepData (Default NULL: dataset Data2fill used built association matrix). pc2fill percentage data (dataFill) fill. pcFamilyDet percentage data determined family level (subset dataFill fill). recommend using percentage equivalent data gapfill. pcGenusDet percentage data determined genus level (subset dataFill fill, rest determined ). recommend using percentage equivalent data gapfill. NbSim number simulations. Results_Simulations boolean specifying user wants keep results simulations","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform simulation and compare them to original species — CompareSim","text":"function returns object class VernaBotaSims. functions summary plot can used object.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareSim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform simulation and compare them to original species — CompareSim","text":"function performs following steps scenario: Get data, Split train test set remove taxonomic information test set (see SampleTestDataset function), Perform simulations (see SimFullCom function), Compare simulations original taxonomic information, function CompareTaxo, Create return object class VernaBotaSims.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareTaxo.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare the original taxonomic information of a dataset with predicted one — CompareTaxo","title":"Compare the original taxonomic information of a dataset with predicted one — CompareTaxo","text":"function used CompareSim function. compares original taxonomic information dataset predicted one return percentage matching species.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareTaxo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare the original taxonomic information of a dataset with predicted one — CompareTaxo","text":"","code":"CompareTaxo(list_res, test_taxo)"},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareTaxo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare the original taxonomic information of a dataset with predicted one — CompareTaxo","text":"list_res Results SimFullCom function applied test dataset: list datatables simulated taxonomic information. test_taxo original taxonomic information test dataset.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareTaxo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare the original taxonomic information of a dataset with predicted one — CompareTaxo","text":"double corresponding percentage well simulated species.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CompareTaxo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare the original taxonomic information of a dataset with predicted one — CompareTaxo","text":"function compares taxonomic information column GenSpCor simulated dataset list_res original information columns Genus Species dataset test_taxo. number good estimation divided length test dataset return percentage good simulations.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CreateAlpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Create matrix of posterior alpha — CreateAlpha","title":"Create matrix of posterior alpha — CreateAlpha","text":"function creates data.table containing matrix posterior alpha taxonomic info, using prior expert knowledge (optional) observation trees confirmed identification temporary identification (BotaCertainty 4 3 Guyafor)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CreateAlpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create matrix of posterior alpha — CreateAlpha","text":"","code":"CreateAlpha(DataAsso, prior, wp)"},{"path":"https://EcoFoG.github.io/vernabota/reference/CreateAlpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create matrix of posterior alpha — CreateAlpha","text":"DataAsso data.table inventory data, formatted shown vignette prior data.table prior expert knowledge. dataset must prepared using function PrepPrior. wp numeric value giving weighting prior information","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CreateAlpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create matrix of posterior alpha — CreateAlpha","text":"function returns data.table row per full botanical names (GenSp). first columns GenSp, Family, Genus Species following columns vernacular name. columns vectors alphav.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/CreateAlpha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create matrix of posterior alpha — CreateAlpha","text":"function performs following steps: create matrix lambdav: get lambdav, equal 1/number possible association vernacular name v association possible according prior 0 create matrix fv using DataObs keep trees confirmed identification temporary identification (BotaCertainty 4 3 Guyafor) keep one line per individual (avoid giving weight individuals present multiple censuses) get fv, observed frequencies association vernacular name v botanical name fv sum two matrix weigh wp prior (1-wp) observation","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DirichCat.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a full species name using a Categorical-Dirichlet scheme — DirichCat","title":"Draw a full species name using a Categorical-Dirichlet scheme — DirichCat","text":"function draws full species name given tree within vector alphaV using Categorical-Dirichlet scheme.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DirichCat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a full species name using a Categorical-Dirichlet scheme — DirichCat","text":"","code":"DirichCat(alphaV, Names, Vern)"},{"path":"https://EcoFoG.github.io/vernabota/reference/DirichCat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a full species name using a Categorical-Dirichlet scheme — DirichCat","text":"alphaV vector alphaV obtained DrawBota function (posterior alpha given vernacular name, botanical name Alpha) Names vector botanical name Alpha Vern vernacular name tree want get full botanical name (character)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DirichCat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a full species name using a Categorical-Dirichlet scheme — DirichCat","text":"botanical name obtained Dirichlet-Categorical association.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DirichCat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw a full species name using a Categorical-Dirichlet scheme — DirichCat","text":"function performs following steps: draw one vector Dirichlet distribution shape parameters Vect draw one value Categorical distribution parameter p vector obtained Dirichlet (.e draw one botanical name one time probability vector obtained Dirichlet) retrieve botanical name corresponding non null value vector","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawBota.html","id":null,"dir":"Reference","previous_headings":"","what":"Gives a botanical name to a tree with a vernacular name — DrawBota","title":"Gives a botanical name to a tree with a vernacular name — DrawBota","text":"function gives botanical name tree vernacular name, using Dirichlet-Categorical method, restricting possible association according family genus identified. function performed within function Get1Sim, tree without botanical species name vernacular name.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawBota.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gives a botanical name to a tree with a vernacular name — DrawBota","text":"","code":"DrawBota(Alpha, VernName2Sim, Family2Sim, Genus2Sim, eps = 0.01, Determ)"},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawBota.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gives a botanical name to a tree with a vernacular name — DrawBota","text":"Alpha data.table containing matrix posterior alpha botanical vernacular names, obtained funcion CreateAlpha VernName2Sim vernacular name tree want get full botanical name (character) Family2Sim family name tree want get full botanical name (character) Genus2Sim genus name tree want get full botanical name (character) eps epsilon: background noise species associated given vernacular name. Default 0.01. Determ boolean: TRUE likely botanical names returned association vernacular-botanical performed. FALSE, botanical names drawn using categorical-Dirichlet association scheme.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawBota.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gives a botanical name to a tree with a vernacular name — DrawBota","text":"function returns list two elements: first one associated botanical name second one method association.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawBota.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gives a botanical name to a tree with a vernacular name — DrawBota","text":"function performs following steps: get alphaV vector posterior alpha given vernacular name, botanical name Alpha give null value alphaV botanical name associated vernacular name different genus (genus known) different family (family known) resulting alphaV contains 0, attributed correctionn Det2Genus Det2Fam non-null values alphav, replace null values epsilon divided number null values attributes corrected name using function DrawDeterm Determ set TRUE function DirichCat Determ set FALSE","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawDeterm.html","id":null,"dir":"Reference","previous_headings":"","what":"Attribute the most likely full species name — DrawDeterm","title":"Attribute the most likely full species name — DrawDeterm","text":"function attributes full species name corresponding highest value alpha given tree.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawDeterm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute the most likely full species name — DrawDeterm","text":"","code":"DrawDeterm(AlphaV, levelAsso, VernName2Sim)"},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawDeterm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attribute the most likely full species name — DrawDeterm","text":"AlphaV data.table botanical information first 4 columns one column vernacular name interested, created function DrawBota levelAsso Level association depending available information (\"AssoByGenus\", \"AssoByFam\" \"AssoByVern\") VernName2Sim vernacular name tree want get full botanical name (character)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawDeterm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attribute the most likely full species name — DrawDeterm","text":"function returns list two elements: first one associated botanical name second one method association (AssoByGenus, AssoByGenusT, AssoByFam, AssoByFamT, AssoByVern AssoByVernT).","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/DrawDeterm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Attribute the most likely full species name — DrawDeterm","text":"function performs following steps: Get species value alpha highest tie, return value species associated correction code tie, draw species randomly within species","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/Get1Sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a fully determined dataset — Get1Sim","title":"Simulate a fully determined dataset — Get1Sim","text":"function simulates fully determined dataset (one simulation)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/Get1Sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a fully determined dataset — Get1Sim","text":"","code":"Get1Sim(Data, Alpha, eps = eps, Determ)"},{"path":"https://EcoFoG.github.io/vernabota/reference/Get1Sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a fully determined dataset — Get1Sim","text":"Data data.table gap filling botanical names vernacular names done, formatted shown vignette data preparation performed SimFullCom Alpha data.table containing matrix posterior alpha botanical vernacular names, obtained fonction CreateAlpha eps epsilon: background noise species associated given vernacular name Determ boolean: TRUE likely botanical names returned association vernacular-botanical performed. FALSE, botanical names drawn using categorical-Dirichlet association Scheme.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/Get1Sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a fully determined dataset — Get1Sim","text":"function returns data.table similar Data inputted argument, two additional columns (GenSpCor BotaCorCode).","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/Get1Sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a fully determined dataset — Get1Sim","text":"function performs following steps: create data.table one row per individual trees (want gap filling across census given tree) Perform corrections obtain corrected identification (GensSpCor) specify type correction performed (BotaCorCode) cases tree fully determined (BotaCorCode=\"fullyDet\") vernacular name (vernacular name Alpha) (BotaCorCode=\"Det2Genus\" \"Det2Fam\" \"NoCor\", depending cases Call function DrawBota get GenSpCor BotaCorCode cases species name vernacular name present Alpha join resulting data.table Data get correction tree census","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/Paracou6_2016.html","id":null,"dir":"Reference","previous_headings":"","what":"Paracou6_2016 — Paracou6_2016","title":"Paracou6_2016 — Paracou6_2016","text":"Tree inventory plot 6 Paracou research station (French Guiana) 2016 Public dataset extracted Guyafor database (downloaded 21/01/2022).","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/Paracou6_2016.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paracou6_2016 — Paracou6_2016","text":"","code":"data(Paracou6_2016)"},{"path":"https://EcoFoG.github.io/vernabota/reference/Paracou6_2016.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Paracou6_2016 — Paracou6_2016","text":"data.frame 3620 rows 24 variables: Forest Forest name (character) Plot Plot number (character) PlotArea Plot area, hectare (numeric) SubPlot Subplot number (integer) idTree Unique tree identifier database (integer) Xfield Euclidean position tree relative Southwestern corner subplot, m (numeric) Yfield Euclidean position tree relative Southwestern corner subplo, m (numeric) Xutm Coordinate X tree UTM 22 N (EPSG: 32 622) (numeric) Yutm Coordinate Y tree UTM 22 N (EPSG: 32 622) (numeric) Lat Tree latitude (WGS 84, EPSG : 4326) (numeric) Lon Tree longitude (WGS 84, EPSG : 4326) (numeric) Family Botanical family (character) Genus Botanical genus (character) Species Botanical species (character) BotaSource Source botanical name (character) BotaCertainty Level certainty botanical identification (numeric) VernName Vernacular name (character) CensusYear Census year (integer) CensusDate Census Day (available) (character) CensusDateCertainty CensusDate precise (TRUE) (FALSE)? FALSE, information must considered calculation (logical) CodeAlive tree alive (TRUE) dead (FALSE)? (logical) MeasCode Information method measuring circumference state tree (integer) Circ Circumference tree 1.30m ground (DBH level), cm (numeric) CircCorr Corrected circumference (mathematical correction abnormal circumferences), cm (numeric) CorrCode Information reason circumference corrected, multiple values possible(character)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/Paracou6_2016.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Paracou6_2016 — Paracou6_2016","text":"http://paracou.cirad.fr https://paracoudata.cirad.fr/public/pdf/Paracou_data_dictionnary.pdf https://paracoudata.cirad.fr/main/login/","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepData.html","id":null,"dir":"Reference","previous_headings":"","what":"Data preparation — PrepData","title":"Data preparation — PrepData","text":"function prepares dataset used association vernacular botanical name.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data preparation — PrepData","text":"","code":"PrepData(Data)"},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data preparation — PrepData","text":"Data data.frame inventory data, formatted obtained using function EcoFoG::Guyafor2df online data platform Paracou.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data preparation — PrepData","text":"data.frame (formatted data.table) ready used association vernacular botanical name. column GenSp added, contains Genus species original data set (trees BotaSource=Vern GenSp=\"Indet.-Indet.\")","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data preparation — PrepData","text":"function performs following steps: convert vernacular names lower case (consistency prior) remove botanical names BotaSource=Vern (reason explained description function SimFullCom) remove subspecies variety names add column GenSp full botanical name","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepPrior.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior preparation — PrepPrior","title":"Prior preparation — PrepPrior","text":"function prepares prior steps.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepPrior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior preparation — PrepPrior","text":"","code":"PrepPrior(prior, RemoveIndetSp = TRUE, RemoveNotGuyafor = TRUE)"},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepPrior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior preparation — PrepPrior","text":"prior data.frame prior, formatted shown vignette. RemoveIndetSp botanical names non-determined species removed prior? (Default TRUE) (logical) RemoveNotGuyafor botanical names never observed Guyafor removed prior? (Default TRUE) (logical)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepPrior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior preparation — PrepPrior","text":"function returns data.frame (formatted data.table) ready used following steps.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PrepPrior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prior preparation — PrepPrior","text":"function performs following steps: perform checks file add column GenSp full botanical name remove botanical names fully determined Guyafor (option selected) remove columns association One reason choosing default setting RemoveIndetSp RemoveNotGuyafor names always lead incorrect association using CompareSim function. However, one may decide keep , lead possible associations botanical name form Genus-Indet. BotaCodeCor=\"AssoByGenus\" \"AssoByFam\" (RemoveIndetSp==TRUE). possible associations botanical name never observed Guyafor (RemoveNotGuyafor==TRUE). case, prior information used.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PriorAllFG_20220126.html","id":null,"dir":"Reference","previous_headings":"","what":"PriorAllFG_20220126 — PriorAllFG_20220126","title":"PriorAllFG_20220126 — PriorAllFG_20220126","text":"Prior files resulting work Jean-Maurice MadKaud (see Vignette), botanical vernacular names checked updated 26/01/2022. prior file correspond prior file called \"Probabilités Guyane (sans erreur de relevé, facteur zone)\" Madkaud's report.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PriorAllFG_20220126.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PriorAllFG_20220126 — PriorAllFG_20220126","text":"","code":"data(PriorAllFG_20220126)"},{"path":"https://EcoFoG.github.io/vernabota/reference/PriorAllFG_20220126.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PriorAllFG_20220126 — PriorAllFG_20220126","text":"data.frame 1657 rows 197 variables: Family Family name (character) Genus Genus name (character) Species Species name (character) PresentInGuyaFor taxon present Guyafor database? (bolean)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PriorParacouNew_20220126.html","id":null,"dir":"Reference","previous_headings":"","what":"PriorParacouNew_20220126 — PriorParacouNew_20220126","title":"PriorParacouNew_20220126 — PriorParacouNew_20220126","text":"Prior files resulting work Jean-Maurice MadKaud (see Vignette), botanical vernacular names checked updated 26/01/2022. prior file correspond prior file called \"Probabilités Paracou (avec erreur de relevé, facteur temps (équipe))\" Madkaud's report.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PriorParacouNew_20220126.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PriorParacouNew_20220126 — PriorParacouNew_20220126","text":"","code":"data(PriorParacouNew_20220126)"},{"path":"https://EcoFoG.github.io/vernabota/reference/PriorParacouNew_20220126.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PriorParacouNew_20220126 — PriorParacouNew_20220126","text":"data.frame 661 rows 196 variables: Family Family name (character) Genus Genus name (character) Species Species name (character) PresentInGuyaFor taxon present Guyafor database? (bolean)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PriorParacouOld_20220126.html","id":null,"dir":"Reference","previous_headings":"","what":"PriorParacouOld_20220126 — PriorParacouOld_20220126","title":"PriorParacouOld_20220126 — PriorParacouOld_20220126","text":"Prior files resulting work Jean-Maurice MadKaud (see Vignette), botanical vernacular names checked updated 26/01/2022. prior file correspond prior file called \"Probabilités Paracou (sans erreur de relevé)\" Madkaud's report.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/PriorParacouOld_20220126.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PriorParacouOld_20220126 — PriorParacouOld_20220126","text":"","code":"data(PriorParacouOld_20220126)"},{"path":"https://EcoFoG.github.io/vernabota/reference/PriorParacouOld_20220126.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PriorParacouOld_20220126 — PriorParacouOld_20220126","text":"data.frame 657 rows 192 variables: Family Family name (character) Genus Genus name (character) Species Species name (character) PresentInGuyaFor taxon present Guyafor database? (bolean)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/SampleTestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Split data between training and test — SampleTestDataset","title":"Split data between training and test — SampleTestDataset","text":"function used CompareSim CompareSample functions. splits data train test datasets, remove taxonomic information test dataset.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/SampleTestDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split data between training and test — SampleTestDataset","text":"","code":"SampleTestDataset(dat, pc2fill, pcGenusDet, pcFamilyDet)"},{"path":"https://EcoFoG.github.io/vernabota/reference/SampleTestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split data between training and test — SampleTestDataset","text":"dat data split pc2fill percentage data (dat) fill pcGenusDet percentage data determined genus level (subset dataFill fill, rest determined ). pcFamilyDet percentage data determined family level (subset dataFill fill).","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/SampleTestDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split data between training and test — SampleTestDataset","text":"function returns list 3 elements: dataset taxonomis information removed taxonomic information removed corresponding tree ID (trees test dataset)","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/SampleTestDataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split data between training and test — SampleTestDataset","text":"function Split train test set according parameter pc2fill (keep fully identified trees test set), Remove taxonomic information test set (species, genus, family level according parameters pcFamilyDet pcGenusDet), @export","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/SimFullCom.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates Nsim fully determined communities — SimFullCom","title":"Simulates Nsim fully determined communities — SimFullCom","text":"function simulates Nsim fully determined communities attributing full botanical names trees vernacular name fully determined BotaSource=Vern, using categorical-Dirichlet association Scheme. reason replacing trees BotaSource=Vern cases, botanical name obtained vernacular name using likely association Guyafor database. objective assign botanical name trees vernacular name using probability association, want keep botanical name BotaSource=Vern.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/SimFullCom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates Nsim fully determined communities — SimFullCom","text":"","code":"SimFullCom(   Data2fill,   DataAsso = NULL,   prior = NULL,   wp = 0.5,   NSim,   eps = 0.01,   Determ = NULL )"},{"path":"https://EcoFoG.github.io/vernabota/reference/SimFullCom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates Nsim fully determined communities — SimFullCom","text":"Data2fill data.table dataset gap filling botanical names vernacular names done. dataset must prepared using function PrepData. DataAsso data.table dataset used built association matrix, formatted shown vignette. dataset must prepared using function PrepData. (Default NULL: dataset Data2fill used built association matrix) prior data.frame expert knowledge association used prior. dataset must prepared using function PrepPrior. (Default NULL: prior information used) wp numeric value giving weighting prior information (Default 0.5). NSim positive integer: number simulated communities want obtain eps epsilon: background noise species associated given vernacular name. Default 0.01. Determ boolean: TRUE likely botanical names return association vernacular-botanical performed. FALSE, botanical names drawn using categorical-Dirichlet association Scheme. NSim set 1, value needs provided Determ. NSim set 1, default FALSE.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/SimFullCom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates Nsim fully determined communities — SimFullCom","text":"function returns list NSim data.tables, one original data two additional columns: GensSpCor: Genus species gap filling BotaCorCode : type correction fullyDet: tree fully determined name => correction. Det2Genus: identified genus => corrected name form Genus-Indet. (keep botanically identified genus name say species Indet.) Det2Fam: identified family => corrected name form Family-Indet. (keep botanically identified Family name say species Indet.) NoCor: correction made => corrected name Indet.-Indet. AssoByGenus, AssoByGenusDeterm AssoByGenusDetermT: full identification given method association vernacular name using Dirichlet-Categorical scheme (Determ set FALSE) likely association (Determ set TRUE), limiting possibility species genus AssoByFam, AssoByFamDeterm AssoByFamDetermT: full identification given method association vernacular name using Dirichlet-Categorical scheme described (Determ set FALSE) likely association (Determ set TRUE), limiting possibility species family AssoByVerna, AssoByVerna AssoByVernaT: full identification given method association vernacular name using Dirichlet-Categorical scheme described (Determ set FALSE) likely association (Determ set TRUE) three last cases, Determ set TRUE one species maximum likelihood, random drawn done species T added end code (tie).","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/SimFullCom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulates Nsim fully determined communities — SimFullCom","text":"function performs following steps: get data.table containing matrix posterior Alpha (using function CreateAlpha) prior knowledge dataset prior updated observation dataset DataAsso, using Dirichlet-Categorical scheme get Nsim fully determined community using function Get1Sim Nsim time","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/ValidTaxo.html","id":null,"dir":"Reference","previous_headings":"","what":"Store results of simulation in CompareSim — ValidTaxo","title":"Store results of simulation in CompareSim — ValidTaxo","text":"function used CompareSim function. adds two columns dataset option Results_Simulations set TRUE : TestData boolean know tree test dataset, ValidAsso boolean know associated species right one.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/ValidTaxo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store results of simulation in CompareSim — ValidTaxo","text":"","code":"ValidTaxo(list_res, test_taxo)"},{"path":"https://EcoFoG.github.io/vernabota/reference/ValidTaxo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store results of simulation in CompareSim — ValidTaxo","text":"list_res Results SimFullCom function applied test dataset: list data.tables simulated taxonomic information. test_taxo original taxonomic information test dataset.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/ValidTaxo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store results of simulation in CompareSim — ValidTaxo","text":"function returns data.table similar Data inputted argument, two additional columns (TestData ValidAsso).","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/ValidTaxo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Store results of simulation in CompareSim — ValidTaxo","text":"function compares taxonomic information column GenSpCor simulated dataset list_res original information columns Genus Species dataset test_taxo. adds two columns dataset, specifying tree used test estimated species original one.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/VernaBotaSims-class.html","id":null,"dir":"Reference","previous_headings":"","what":"VernaBotaSims class and associated methods — VernaBotaSims-class","title":"VernaBotaSims class and associated methods — VernaBotaSims-class","text":"VernaBotaSims class output CompareSim function. Plot function applied VernaBotaSims objects. function draw boxplot percentages well associated species scenario. Summary function applied VernaBotaSims objects. function print results scenario, together parameters.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/VernaBotaSims-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"VernaBotaSims class and associated methods — VernaBotaSims-class","text":"NScenar numeric: number scenarios simulated ParamScenar data.frame: datatable parameters scenario (input CompareSim) D2fill dataset fill (input CompareSim) DAsso list datasets observation used scenario (input CompareSim) priors list datasets containing priors scenario (input CompareSim) pc2fill percentage data fill (input CompareSim) pcFamilyDet percentage data determined family level (subset dataFill fill, input CompareSim) pcGenusDet percentage data determined genus level (subset dataFill fill, rest determined , input CompareSim) NbSim number simulations (input CompareSim) pc_results list double corresponding percentage well simulated species results list results SimFullCom scenario.","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/autoplot.VernaBotaSims.html","id":null,"dir":"Reference","previous_headings":"","what":"plot the accuracy of scenarios — autoplot.VernaBotaSims","title":"plot the accuracy of scenarios — autoplot.VernaBotaSims","text":"plot accuracy scenarios","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/autoplot.VernaBotaSims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot the accuracy of scenarios — autoplot.VernaBotaSims","text":"","code":"# S3 method for VernaBotaSims autoplot(object, ...)"},{"path":"https://EcoFoG.github.io/vernabota/reference/autoplot.VernaBotaSims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot the accuracy of scenarios — autoplot.VernaBotaSims","text":"object object class \"VernaBotaSims\" ... arguments passed methods","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/autoplot.VernaBotaSims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot the accuracy of scenarios — autoplot.VernaBotaSims","text":"ggplot accuracy different scenarios","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/plot.VernaBotaSims.html","id":null,"dir":"Reference","previous_headings":"","what":"plot the accuracy of scenarios — plot.VernaBotaSims","title":"plot the accuracy of scenarios — plot.VernaBotaSims","text":"plot accuracy scenarios","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/plot.VernaBotaSims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot the accuracy of scenarios — plot.VernaBotaSims","text":"","code":"# S3 method for VernaBotaSims plot(x, ...)"},{"path":"https://EcoFoG.github.io/vernabota/reference/plot.VernaBotaSims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot the accuracy of scenarios — plot.VernaBotaSims","text":"x object class \"VernaBotaSims\" ... arguments passed methods","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot graphics boxplot, plot","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/stabletest.html","id":null,"dir":"Reference","previous_headings":"","what":"test the stability of the results of CompareSim — stabletest","title":"test the stability of the results of CompareSim — stabletest","text":"test stability results CompareSim","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/stabletest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test the stability of the results of CompareSim — stabletest","text":"","code":"stabletest(object, s, ...)"},{"path":"https://EcoFoG.github.io/vernabota/reference/stabletest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test the stability of the results of CompareSim — stabletest","text":"object object class \"VernaBotaSims\" s scenario user want test stability simulations ... arguments passed methods","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/summary.VernaBotaSims.html","id":null,"dir":"Reference","previous_headings":"","what":"summary of scenarios — summary.VernaBotaSims","title":"summary of scenarios — summary.VernaBotaSims","text":"summary scenarios","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/summary.VernaBotaSims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary of scenarios — summary.VernaBotaSims","text":"","code":"# S3 method for VernaBotaSims summary(object, ...)"},{"path":"https://EcoFoG.github.io/vernabota/reference/summary.VernaBotaSims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary of scenarios — summary.VernaBotaSims","text":"object object class \"VernaBotaSims\" ... arguments passed methods","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/summary.VernaBotaSims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary of scenarios — summary.VernaBotaSims","text":"summary scenarios tested","code":""},{"path":"https://EcoFoG.github.io/vernabota/reference/vernabota.html","id":null,"dir":"Reference","previous_headings":"","what":"vernabota-package — vernabota","title":"vernabota-package — vernabota","text":"Association vernacular botanical names Guyafor data","code":""},{"path":[]},{"path":"https://EcoFoG.github.io/vernabota/reference/vernabota.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vernabota-package — vernabota","text":"Maintainer: Geraldine Derroire geraldine.derroire@cirad.fr (ORCID) Authors: Melaine Aubry-Kientz (ORCID) Ariane Mirabel (ORCID) Daniela Krebber Eric Marcon eric.marcon@agroparistech.fr (ORCID) Bruno Herault bruno.herault@cirad.fr (ORCID)","code":""},{"path":[]},{"path":"https://EcoFoG.github.io/vernabota/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"vernabota 0.3.0","text":"Changes function CompareSim New function stabletest New function CompareSample","code":""},{"path":[]},{"path":"https://EcoFoG.github.io/vernabota/news/index.html","id":"new-features-0-2-2","dir":"Changelog","previous_headings":"","what":"New features","title":"vernabota 0.2.2","text":"Vignette pkgdown Continuous integration GitHub Pages autoplot method class VernaBotaSims","code":""},{"path":[]},{"path":"https://EcoFoG.github.io/vernabota/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"vernabota 0.1.0","text":"First version","code":""}]
